

    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:One.Control.Converters"
                    xmlns:dockablz="clr-namespace:One.Control.Controls.Dragablz.Dockablz"
                    xmlns:dragablz="clr-namespace:One.Control.Controls.Dragablz"
                    xmlns:local="clr-namespace:One.Control.Controls.Dragablz.Themes">

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:EqualityToVisibilityConverter x:Key="EqualityToVisibilityConverter" />
        <converters:BooleanAndToVisibilityConverter x:Key="BooleanAndToVisibilityConverter" />
        <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter" />
        <converters:ShowDefaultCloseButtonConverter x:Key="ShowDefaultCloseButtonConverter" />
        <local:BrushToRadialGradientBrushConverter x:Key="BrushToRadialGradientBrushConverter" />

        <Style x:Key="MaterialDesignFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignInvisibleThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid Background="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignMenuCommandButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource MaterialDesignFocusVisual}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Opacity" Value=".8" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value=".5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{x:Static dragablz:DragablzColors.WindowGlassBrush}" />
                    <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignCloseItemCommandButtonStyle" BasedOn="{StaticResource MaterialDesignMenuCommandButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                            <Path x:Name="Path" Width="6" Height="6"
                              Data="M0.5,71 L70,0.5 M0.5,1 L70,70.5"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeEndLineCap="Square"
                              StrokeStartLineCap="Square" StrokeThickness="1.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Margin" Value="4,0,2,0" />
            <Setter Property="Opacity" Value=".75" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignAddItemCommandButtonStyle" BasedOn="{StaticResource MaterialDesignMenuCommandButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                            <Path x:Name="Path" Width="6" Height="6"
                              Data="M38,6L38.0003451911513,70.6666666666666 M70.3336667356886,38L5.50002465137562,38"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeEndLineCap="Square"
                              StrokeStartLineCap="Square" StrokeThickness="1.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Margin" Value="4,0,2,0" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="MaterialDesignDragableTabItemStyle" TargetType="{x:Type dragablz:DragablzItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource MaterialDesignFocusVisual}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="local:MaterialDesignAssist.IndicatorBrush" Value="{DynamicResource SecondaryAccentBrush}" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Height" Value="40" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.FontWeight" Value="Medium" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Margin="0,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <local:Ripple VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Control.Padding}"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                      Content="{TemplateBinding ContentControl.Content}"
                                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      Opacity=".87"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        <Thumb x:Name="PART_Thumb" Grid.Column="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                        <Button Grid.Column="1" Command="{x:Static dragablz:TabablzControl.CloseItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource MaterialDesignCloseItemCommandButtonStyle}">
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                                    <Binding Path="ShowDefaultCloseButton" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                    <Binding Path="FixedHeaderCount" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                    <Binding Path="LogicalIndex" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </Button.Visibility>
                                        </Button>
                                    </Grid>
                                </local:Ripple>
                            </Border>
                            <Border x:Name="SelectionHighlightBorder" Grid.Row="1" Height="2" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:MaterialDesignAssist.IndicatorBrush)}" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                                <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                                <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignDragableTabItemVerticalStyle" TargetType="{x:Type dragablz:DragablzItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource MaterialDesignFocusVisual}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Width" Value="80" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.FontWeight" Value="Medium" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Margin="0,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <local:Ripple VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter x:Name="contentPresenter"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                      Content="{TemplateBinding ContentControl.Content}"
                                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      RenderTransformOrigin=".5, .5"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                                            <ContentPresenter.RenderTransform>
                                                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dragablz:DragablzItem.ContentRotateTransformAngle)}" />
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                        <Thumb x:Name="PART_Thumb" Grid.Row="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                        <Button Grid.Row="1" Command="{x:Static dragablz:TabablzControl.CloseItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource MaterialDesignCloseItemCommandButtonStyle}">
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                                    <Binding Path="ShowDefaultCloseButton" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                    <Binding Path="FixedHeaderCount" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                    <Binding Path="LogicalIndex" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </Button.Visibility>
                                        </Button>
                                    </Grid>
                                </local:Ripple>
                            </Border>
                            <Border x:Name="SelectionHighlightBorder" Grid.Column="1" Width="2" Background="{DynamicResource SecondaryAccentBrush}" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                                <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                                <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignMetroBaseWindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="0.75" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SemiTransparentWhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#ADADAD" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignToolWindowButtonStyle" BasedOn="{StaticResource MaterialDesignMetroBaseWindowButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="30" />
            <Setter Property="MaxHeight" Value="30" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignToolDragablzItemStyle" TargetType="{x:Type dragablz:HeaderedDragablzItem}">
            <Style.Setters>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="BorderThickness" Value="4" />
                <Setter Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dragablz:HeaderedDragablzItem}">
                            <Grid Margin="{TemplateBinding Margin}">
                                <Border Background="{DynamicResource WhiteColorBrush}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Direction="315" Opacity=".5" ShadowDepth="5" Color="{DynamicResource AccentColor2}" />
                                    </Border.Effect>
                                </Border>
                                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" SnapsToDevicePixels="True">
                                    <DockPanel>
                                        <Grid Background="{TemplateBinding BorderBrush}" DockPanel.Dock="Top">
                                            <Thumb x:Name="PART_Thumb" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                            <DockPanel Margin="{TemplateBinding Control.Padding}">
                                                <Button Margin="1,0,0,0"
                                                    Command="{x:Static dockablz:Layout.CloseFloatingItem}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                    DockPanel.Dock="Right" Focusable="False"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Style="{DynamicResource MaterialDesignToolWindowButtonStyle}">
                                                    <Path Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" SnapsToDevicePixels="True" />
                                                </Button>
                                                <Button Margin="1,0,0,0" Command="{x:Static dockablz:Layout.UnfloatItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Right" Style="{DynamicResource MaterialDesignToolWindowButtonStyle}">
                                                    <Path Width="12" Height="12" Data="M 19 19 H 5 V 5 h 7 V 3 H 5 C 3.89 3 3 3.9 3 5 v 14 c 0 1.1 0.89 2 2 2 h 14 c 1.1 0 2 -0.9 2 -2 v -7 h -2 v 7 z M 14 3 v 2 h 3.59 L 7.76 14.83 9.17 16.24 19 6.41 V 10 h 2 V 3 h -7 z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" Stretch="UniformToFill" />
                                                </Button>
                                                <Button Margin="1,0,0,0" Command="{x:Static dockablz:Layout.MaximiseFloatingItem}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Right" Style="{DynamicResource MaterialDesignToolWindowButtonStyle}">
                                                    <Path Width="10" Height="10" Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" SnapsToDevicePixels="True" />
                                                </Button>
                                                <Button Margin="1,0,0,0" Command="{x:Static dockablz:Layout.RestoreFloatingItem}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Right" Style="{DynamicResource MaterialDesignToolWindowButtonStyle}">
                                                    <Path Width="10" Height="10" Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" SnapsToDevicePixels="True" />
                                                </Button>
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                              Content="{TemplateBinding HeaderContent}"
                                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                              ContentTemplate="{TemplateBinding HeaderContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding HeaderContentTemplateSelector}"
                                                              IsHitTestVisible="False"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </DockPanel>
                                        </Grid>
                                        <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                      Content="{TemplateBinding ContentControl.Content}"
                                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </DockPanel>
                                </Border>
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Stretch"
                                   dragablz:DragablzItem.SizeGrip="Left"
                                   Cursor="SizeWE"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Top"
                                   dragablz:DragablzItem.SizeGrip="Top"
                                   Cursor="SizeNS"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Stretch"
                                   dragablz:DragablzItem.SizeGrip="Right"
                                   Cursor="SizeWE"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Bottom"
                                   dragablz:DragablzItem.SizeGrip="Bottom"
                                   Cursor="SizeNS"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   HorizontalAlignment="Left" VerticalAlignment="Top"
                                   dragablz:DragablzItem.SizeGrip="TopLeft"
                                   Cursor="SizeNWSE"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   dragablz:DragablzItem.SizeGrip="TopRight"
                                   Cursor="SizeNESW"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   dragablz:DragablzItem.SizeGrip="BottomRight"
                                   Cursor="SizeNWSE"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                                <Thumb Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom"
                                   dragablz:DragablzItem.SizeGrip="BottomLeft"
                                   Cursor="SizeNESW"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   Style="{StaticResource MaterialDesignInvisibleThumbStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="dockablz:Layout.FloatingItemState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Canvas.Left" Value="0" />
                    <Setter Property="Canvas.Top" Value="0" />
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dockablz:Layout}}, Path=ActualWidth}" />
                    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dockablz:Layout}}, Path=ActualHeight}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="TabablzScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="1"
                       Grid.Column="0" Margin="0,1,0,0"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Minimum="0"
                       ViewportSize="{TemplateBinding ViewportHeight}"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="0"
                       Grid.Column="1" Margin="1,0,0,0"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableWidth}"
                       Minimum="0" Orientation="Horizontal"
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="TabablzDragablzItemsControlStyle" TargetType="{x:Type dragablz:DragablzItemsControl}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dragablz:DragablzItemsControl}">
                        <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" HorizontalScrollBarVisibility="Auto" Template="{StaticResource TabablzScrollViewerControlTemplate}" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter Width="{TemplateBinding ItemsPresenterWidth}" Height="{TemplateBinding ItemsPresenterHeight}" HorizontalAlignment="Left" VerticalAlignment="Top" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardEmbeddedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignTabablzControlStyle" TargetType="{x:Type dragablz:TabablzControl}">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=(TextElement.Foreground)}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignDragableTabItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="contentPanel" Grid.Row="1" Grid.Column="0"
                                Margin="0,-1,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <Grid x:Name="PART_ItemsHolder" />
                            </Border>
                            <Grid x:Name="HeaderContainerGrid" Grid.Row="0" Grid.Column="0" Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.Resources>
                                    <Style BasedOn="{StaticResource StandardEmbeddedButtonStyle}" TargetType="{x:Type Button}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="4" Background="{TemplateBinding BorderBrush}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" Direction="270" Opacity=".5" ShadowDepth="2" />
                                    </Border.Effect>
                                </Border>
                                <ContentControl x:Name="PrefixContentControl" Grid.Column="0"
                                            Content="{TemplateBinding HeaderPrefixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}" />
                                <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl" Grid.Column="1"
                                                           Panel.ZIndex="1"
                                                           FixedItemCount="{TemplateBinding FixedHeaderCount}"
                                                           ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                           ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                                           ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                                           ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"
                                                           KeyboardNavigation.TabIndex="1"
                                                           Style="{StaticResource TabablzDragablzItemsControlStyle}">
                                    <dragablz:DragablzItemsControl.MaxWidth>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <dragablz:TabablzHeaderSizeConverter Orientation="Horizontal" />
                                            </MultiBinding.Converter>
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ItemsPresenterWidth" RelativeSource="{RelativeSource Self}" />
                                            <Binding ElementName="PrefixContentControl" Path="ActualWidth" />
                                            <Binding ElementName="DefaultAddButton" Path="DesiredSize.Width" />
                                            <Binding ElementName="SuffixContentControl" Path="DesiredSize.Width" />
                                        </MultiBinding>
                                    </dragablz:DragablzItemsControl.MaxWidth>
                                </dragablz:DragablzItemsControl>
                                <Button x:Name="DefaultAddButton" Grid.Column="2" Command="{x:Static dragablz:TabablzControl.AddItemCommand}" Style="{StaticResource MaterialDesignAddItemCommandButtonStyle}" Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <ContentControl x:Name="SuffixContentControl" Grid.Column="3"
                                            HorizontalAlignment="Stretch"
                                            Content="{TemplateBinding HeaderSuffixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter TargetName="PART_HeaderItemsControl" Property="Grid.Row" Value="1" />
                                <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsDraggingWindow" Value="True">
                                <Setter TargetName="DefaultAddButton" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="TabStripPlacement" Value="Left">
                    <Setter Property="HeaderItemsOrganiser">
                        <Setter.Value>
                            <dragablz:VerticalOrganiser />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignDragableTabItemVerticalStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                                <Grid x:Name="templateRoot" ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto" />
                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="contentPanel" Grid.Column="1"
                                        Margin="-1,0,0,0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                        <Grid x:Name="PART_ItemsHolder" />
                                    </Border>
                                    <Grid x:Name="HeaderContainerGrid" Grid.Column="0" Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid.Resources>
                                            <Style BasedOn="{StaticResource StandardEmbeddedButtonStyle}" TargetType="{x:Type Button}" />
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Border Grid.RowSpan="4" Background="{TemplateBinding BorderBrush}">
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="5" Direction="0" Opacity=".5" ShadowDepth="2" />
                                            </Border.Effect>
                                        </Border>
                                        <ContentControl x:Name="PrefixContentControl" Grid.Row="0"
                                                    Content="{TemplateBinding HeaderPrefixContent}"
                                                    ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                                    ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}" />
                                        <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl" Grid.Row="1"
                                                                   Panel.ZIndex="1"
                                                                   FixedItemCount="{TemplateBinding FixedHeaderCount}"
                                                                   ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                                   ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                                                   ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                                                   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"
                                                                   KeyboardNavigation.TabIndex="1"
                                                                   Style="{StaticResource TabablzDragablzItemsControlStyle}">
                                            <dragablz:DragablzItemsControl.MaxHeight>
                                                <MultiBinding>
                                                    <MultiBinding.Converter>
                                                        <dragablz:TabablzHeaderSizeConverter Orientation="Vertical" />
                                                    </MultiBinding.Converter>
                                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="ItemsPresenterHeight" RelativeSource="{RelativeSource Self}" />
                                                    <Binding ElementName="PrefixContentControl" Path="ActualHeight" />
                                                    <Binding ElementName="DefaultAddButton" Path="DesiredSize.Height" />
                                                    <Binding ElementName="SuffixContentControl" Path="DesiredSize.Height" />
                                                </MultiBinding>
                                            </dragablz:DragablzItemsControl.MaxHeight>
                                        </dragablz:DragablzItemsControl>
                                        <Button x:Name="DefaultAddButton" Grid.Row="2" Command="{x:Static dragablz:TabablzControl.AddItemCommand}" Style="{StaticResource MaterialDesignAddItemCommandButtonStyle}" Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <ContentControl x:Name="SuffixContentControl" Grid.Row="3"
                                                    VerticalAlignment="Top"
                                                    Content="{TemplateBinding HeaderSuffixContent}"
                                                    ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                                    ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}" />
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsDraggingWindow" Value="True">
                                        <Setter TargetName="DefaultAddButton" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <!--  TODO  -->
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignAlternateDragableTabItemStyle" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}" TargetType="{x:Type dragablz:DragablzItem}">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignColumnHeader}" />
            <Setter Property="local:MaterialDesignAssist.IndicatorBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignAlternateDragableTabItemVerticalStyle" BasedOn="{StaticResource MaterialDesignDragableTabItemVerticalStyle}" TargetType="{x:Type dragablz:DragablzItem}">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignColumnHeader}" />
            <Setter Property="local:MaterialDesignAssist.IndicatorBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignAlternateTabablzControlStyle" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" TargetType="{x:Type dragablz:TabablzControl}">
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignPaper}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignAlternateDragableTabItemStyle}" />
            <Style.Triggers>
                <Trigger Property="TabStripPlacement" Value="Left">
                    <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignAlternateDragableTabItemVerticalStyle}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </ResourceDictionary>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>One.Core</name>
    </assembly>
    <members>
        <member name="T:One.Core.BaseClass.BindableObject">
            <summary> 带通知的Object基类 </summary>
        </member>
        <member name="T:One.Core.ExtensionMethods.ExtensionMethodsForArray">
            <summary> 数组扩展方法 </summary>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForArray.Copy(System.Array,System.Int32,System.Int32)">
            <summary> 复制指定长度的字符到新的字符串 </summary>
            <param name="str">    </param>
            <param name="start">  </param>
            <param name="length"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForArray.Add``1(``0[],``0)">
            <summary> Array添加单项 </summary>
            <typeparam name="T"> 泛型 </typeparam>
            <param name="array"> Array </param>
            <param name="item">  需要添加项 </param>
            <returns> 返回新的Array </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForArray.AddRange``1(``0[],``0[])">
            <summary> Array添加多项 </summary>
            <typeparam name="T"> 泛型 </typeparam>
            <param name="sourceArray"> Array </param>
            <param name="addArray">    Array </param>
            <returns> 返回新的Array </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForArray.AddLinq``1(``0[],``0)">
            <summary> Array添加 </summary>
            <typeparam name="T"> 泛型 </typeparam>
            <param name="array"> Array </param>
            <param name="item">  需要添加项 </param>
            <returns> 返回新的Array </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForArray.AddRangeLinq``1(``0[],``0[])">
            <summary> Array添加 </summary>
            <typeparam name="T"> 泛型 </typeparam>
            <param name="sourceArray"> Array </param>
            <param name="addArray">    Array </param>
            <returns> 返回新的Array </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForByte.ToString(System.Byte[],System.Text.Encoding)">
            <summary> 转换当前byte[]为对应的string </summary>
            <param name="e"> string字符编码 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForCollection.AddRange``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加T类型的序列到当前序列末尾（带通知）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="items"></param>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForCollection.AddRange``1(System.Collections.ObjectModel.Collection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加T类型的序列到当前序列末尾
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="items"></param>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForDateTime.StartOfDay(System.DateTime)">
            <summary> 获取当天起始时间 00:00:00:000 </summary>
            <param name="this"> The @this to act on. </param>
            <returns> A DateTime of the day with the time set to "00:00:00:000". </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForDateTime.EndOfDay(System.DateTime)">
            <summary> 获取当天最后一刻 "23:59:59:999" The last moment of the day. Use "DateTime2" column type in sql to keep the precision. </summary>
            <param name="this"> The @this to act on. </param>
            <returns> A DateTime of the day with the time set to "23:59:59:999". </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnum.GetCustomAttributeDescription(System.Enum)">
            <summary> 获取枚举描述属性 </summary>
            <param name="value"> The value to act on. </param>
            <returns> The description attribute. </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnum.TryParse``1(System.String)">
            <summary>
            解析枚举
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnumerate.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary> 返回指定筛选条件下序列非重复元素的首项 </summary>
            <typeparam name="TSource"> </typeparam>
            <typeparam name="TKey"> </typeparam>
            <param name="source">      </param>
            <param name="keySelector"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnumerate.FindIndex``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            获取指定筛选条件下对象的Index
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnumerate.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary> Enumerates for each in this collection. </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="this">   The @this to act on. </param>
            <param name="action"> The action. </param>
            <returns> An enumerator that allows foreach to be used to process for each in this collection. </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnumerate.GroupCount``2(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``0,``1}})">
            <summary> 统计分组数量 </summary>
            <typeparam name="TSource"> </typeparam>
            <typeparam name="TKey"> </typeparam>
            <param name="source">      </param>
            <param name="keySelector"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForEnumerate.ToList``1(System.Collections.IEnumerator)">
            <summary> Adds each item in the <see cref="T:System.Collections.IEnumerator"/> into a <see cref="T:System.Collections.Generic.List`1"/> and return the new <see cref="T:System.Collections.Generic.List`1"/>. </summary>
            <typeparam name="T"> The type of the elements in the <see cref="T:System.Collections.Generic.List`1"/>. </typeparam>
            <param name="enumerator"> The <see cref="T:System.Collections.IEnumerator"/> instance that the extension method affects. </param>
            <returns> The <see cref="T:System.Collections.Generic.List`1"/> instance with the elements of the <see cref="T:System.Collections.IEnumerator"/>. </returns>
        </member>
        <member name="T:One.Core.ExtensionMethods.ExtensionMethodsForString">
            <summary> 扩展字符串类 </summary>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToInt(System.String)">
            <summary>
            转Int,失败返回0
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToInt(System.String,System.Int32)">
            <summary>
            转Int,失败返回pReturn
            </summary>
            <param name="t"></param>
            <param name="pReturn">失败返回的值</param>
            <returns></returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsInt(System.String)">
            <summary> 是否是Int true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToInt16(System.String)">
            <summary> 转Int,失败返回0 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToInt16(System.String,System.Int16)">
            <summary> 转Int,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsInt16(System.String)">
            <summary> 是否是Int true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Tobyte(System.String)">
            <summary> 转byte,失败返回0 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToByte(System.String,System.Text.Encoding)">
            <summary> 转byte[]</summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Tobyte(System.String,System.Byte)">
            <summary> 转byte,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Isbyte(System.String)">
            <summary> 是否是byte true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToLong(System.String)">
            <summary> 转Long,失败返回0 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToLong(System.String,System.Int64)">
            <summary> 转Long,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsLong(System.String)">
            <summary> 是否是Long true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDouble(System.String)">
            <summary> 转Int,失败返回0 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDouble(System.String,System.Double)">
            <summary> 转Double,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsDouble(System.String)">
            <summary> 是否是Double true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDecimal(System.String)">
            <summary> 转Decimal,失败返回0 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDecimal(System.String,System.Decimal)">
            <summary> 转Decimal,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsDecimal(System.String)">
            <summary> 是否是Decimal true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDateTime(System.String)">
            <summary> 转DateTime,失败返回当前时间 </summary>
            <param name="e"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDateTime(System.String,System.DateTime)">
            <summary> 转DateTime,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDateTime(System.String,System.String,System.String)">
            <summary> 转DateTime,失败返回pReturn </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToDateTime(System.String,System.String)">
            <summary> 转DateTime,失败返回空 </summary>
            <param name="e">       </param>
            <param name="pReturn"> 失败返回的值 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsDateTime(System.String)">
            <summary> 是否是DateTime true:是 false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToIntArr(System.String)">
            <summary> 转int[],字符串以逗号(,)隔开,请确保字符串内容都合法,否则会出错 </summary>
            <param name="pStr"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ToIntArr(System.String,System.Char[])">
            <summary> 转int[],字符串以逗号(,)隔开,请确保字符串内容都合法,否则会出错 </summary>
            <param name="t">      </param>
            <param name="pSplit"> 隔开的 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ClearNoInt(System.String,System.Char)">
            <summary> 过滤字符串的非int,重新组合成字符串 </summary>
            <param name="t">      </param>
            <param name="pSplit"> 分隔符 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ClearNoInt(System.String)">
            <summary> 过滤字符串的非int,重新组合成字符串 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsIntArr(System.String,System.Char)">
            <summary> 是否可以转换成int[],true:是,false:否 </summary>
            <param name="t">      </param>
            <param name="pSplit"> 分隔符 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsIntArr(System.String)">
            <summary> 是否可以转换成int[],true:是,false:否 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Left(System.String,System.Int32,System.String)">
            <summary> 载取左字符 </summary>
            <param name="t">       </param>
            <param name="pLen">    字符个数 </param>
            <param name="pReturn"> 超出时后边要加的返回的内容 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ClearPathUnsafe(System.String)">
            <summary> 删除文件名或路径的特殊字符 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.LengthReal(System.String)">
            <summary> 字符串真实长度 如:一个汉字为两个字节 </summary>
            <param name="s"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.ClearDecimal0(System.String)">
            <summary> 去除小数位最后为0的 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Change16To2(System.String)">
            <summary> 16进制转二进制 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Change2To10(System.String)">
            <summary> 二进制转十进制 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Change2ToBytes(System.String)">
            <summary> 二进制转换byte[]数组 </summary>
            <param name="s"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.Change2ToIndex(System.String)">
            <summary> 二进制转化为索引id数据,从右到左 </summary>
            <param name="t"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsNumeric(System.String)">
            <summary> 验证字符串是否由正负号（+-）、数字、小数点构成，并且最多只有一个小数点 </summary>
            <param name="str"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsNumericOnly(System.String)">
            <summary> 验证字符串是否仅由[0-9]构成 </summary>
            <param name="str"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsNumericOrLetters(System.String)">
            <summary> 验证字符串是否由字母和数字构成 </summary>
            <param name="str"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.IsNullOrEmptyStr(System.String)">
            <summary> 验证是否为空字符串。若无需裁切两端空格，建议直接使用 String.IsNullOrEmpty(string) </summary>
            <param name="str"> </param>
            <returns> </returns>
            <remarks> 不同于String.IsNullOrEmpty(string)，此方法会增加一步Trim操作。如 IsNullOrEmptyStr(" ") 将返回 true。 </remarks>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.CutStr(System.String,System.Int32,System.Boolean)">
             <summary> 裁切字符串（中文按照两个字符计算） </summary>
             <param name="str">        旧字符串 </param>
             <param name="len">        新字符串长度 </param>
             <param name="HtmlEnable"> 为 false 时过滤 Html 标签后再进行裁切，反之则保留 Html 标签。 </param>
             <remarks>
             <para> 注意： <ol> <li> 若字符串被截断则会在末尾追加“...”，反之则直接返回原始字符串。 </li><li> 参数 <paramref name="HtmlEnable"/> 为 false 时会先调用 <see cref="!:uoLib.Common.Functions.HtmlFilter"/> 过滤掉 Html 标签再进行裁切。 </li><li> 中文按照两个字符计算。若指定长度位置恰好只获取半个中文字符，则会将其补全，如下面的例子： <br/>
             <code>
            <![CDATA[
            string str = "感谢使用uoLib。";
            string A = CutStr(str,4);   // A = "感谢..."
            string B = CutStr(str,5);   // B = "感谢使..."
            ]]>
             </code>
             </li></ol>
             </para>
             </remarks>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.CutStr(System.String,System.Int32)">
             <summary> 裁切字符串（中文按照两个字符计算，裁切前会先过滤 Html 标签） </summary>
             <param name="str"> 旧字符串 </param>
             <param name="len"> 新字符串长度 </param>
             <remarks>
             <para> 注意： <ol> <li> 若字符串被截断则会在末尾追加“...”，反之则直接返回原始字符串。 </li><li> 中文按照两个字符计算。若指定长度位置恰好只获取半个中文字符，则会将其补全，如下面的例子： <br/>
             <code>
            <![CDATA[
            string str = "感谢使用uoLib模块。";
            string A = CutStr(str,4);   // A = "感谢..."
            string B = CutStr(str,5);   // B = "感谢使..."
            ]]>
             </code>
             </li></ol>
             </para>
             </remarks>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.GetLength(System.String)">
            <summary> 获取字符串长度。与string.Length不同的是，该方法将中文作 2 个字符计算。 </summary>
            <param name="str"> 目标字符串 </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.ExtensionMethods.ExtensionMethodsForString.GetFileSizeFromString(System.String)">
            <summary> 将形如 10.1MB 格式对用户友好的文件大小字符串还原成真实的文件大小，单位为字节。 </summary>
            <param name="formatedSize"> 形如 10.1MB 格式的文件大小字符串 </param>
            <remarks> 参见： <see cref="!:uoLib.Common.Functions.FormatFileSize(long)"/> </remarks>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.GetStringMD5(System.String)">
            <summary>
            计算字符串的特征码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.BytesToStruct(System.Byte[],System.Type)">
            <summary>
            Byte数组转为StrData，实现了反序列化
            </summary>
            <param name="bytes"></param>
            <param name="StrData"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.StructToBytes(System.Object)">
            <summary>
            StrData转为Byte数组，实现了序列化
            </summary>
            <param name="StrData"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.EndianUINT16(System.UInt16)">
            <summary> 转换为对应长度的大端模式 </summary>
            <param name="Dat">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.EndianUINT32(System.UInt32)">
            <summary> 转换为对应长度的大端模式 </summary>
            <param name="Dat">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.EndianUINT64(System.UInt64)">
            <summary> 转换为对应长度的大端模式 </summary>
            <param name="Dat">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.EndianINT64(System.Int64)">
            <summary> 转换为对应长度的大端模式 </summary>
            <param name="Dat">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.FloatToUshort(System.Single)">
            <summary> float 数据变为 ushort 数组 </summary>
            <param name="data"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.UshortToFloat2(System.UInt16[])">
            <summary>
            另一种BlockCopy方案
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.ByteHelper.FloatToUshort2(System.Single)">
            <summary> 另一种BlockCopy方案</summary>
            <param name="data"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.DatetimeHelper.TimeSpanFormat(System.TimeSpan)">
            <summary> 格式化时间戳，生成例如 02小时03分钟04秒的格式 </summary>
            <param name="ts"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.DatetimeHelper.ConvertDataTimeToLong(System.DateTime)">
            <summary>
            DateTime --> long
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.DatetimeHelper.ConvertLongToDateTime(System.Int64)">
            <summary>
            long --> DateTime
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:One.Core.Helper.FileHelper">
            <summary>
            文件帮助类
            </summary>
        </member>
        <member name="M:One.Core.Helper.FileHelper.GetMD5HashFromFile(System.String)">
            <summary>
            获取文件的MD5
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.FileHelper.DeleteExe">
            <summary>
            删除使用这个方法的exe,必须放在formclosed方法里边,并且调用后程序要退出
            </summary>
        </member>
        <member name="M:One.Core.Helper.HardwareInfoHelper.MulGetHardwareInfo(One.Core.Helper.HardwareEnum,System.String,System.String)">
            <summary>
            WMI取硬件信息
            </summary>
            <param name="hardType"></param>
            <param name="propKey"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:One.Core.Helper.HardwareEnum">
            <summary> 枚举win32 api </summary>
        </member>
        <member name="F:One.Core.Helper.HardwareEnum.Win32_PnPEntity">
            <summary> all device </summary>
        </member>
        <member name="T:One.Core.Helper.HttpHelper.HTTPClientHelper">
            <summary>
            主要用于get post请求
            </summary>
        </member>
        <member name="M:One.Core.Helper.HttpHelper.HTTPClientHelper.GetRequestAsync(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary> get请求，可以对请求头进行多项设置 </summary>
            <param name="paramArray"> </param>
            <param name="url">        </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.HttpHelper.HTTPClientHelper.HttpPostJsonRequestAsync(System.String,System.String)">
            <summary>
            123
            </summary>
            <param name="Url"></param>
            <param name="jsonstr">234</param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.HttpHelper.HTTPClientHelper.HttpPostRequestAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            异步POST请求
            </summary>
            <param name="Url">234</param>
            <param name="paramArray">324</param>
            <param name="ContentType"><para>POST请求的两种编码格式:</para>"application/x-www-urlencoded"是浏览器默认的编码格式,用于键值对参数,参数之间用&amp;间隔；<para>"multipart/form-data"常用于文件等二进制，也可用于键值对参数，最后连接成一串字符传输(参考Java OK HTTP)。</para><para>除了这两个编码格式，还有"application/json"也经常使用。</para></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:One.Core.Helper.HttpHelper.HTTPClientHelper.HttpPostRequestAsync(System.String,System.String,System.String)" -->
        <member name="T:One.Core.Helper.HttpHelper.HttpDownloadHelper">
            <summary>
            官方推荐的HttpClient，下载方法使用上边的
            </summary>
        </member>
        <member name="T:One.Core.Helper.IPConvertHelper">
            <summary>
            IP地址字符串和数字转换
            </summary>
        </member>
        <member name="M:One.Core.Helper.IPConvertHelper.IPToNumber(System.String)">
            <summary>
            将IPv4格式的字符串转换为int型表示
            </summary>
            <param name="strIPAddress">IPv4格式的字符</param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.IPConvertHelper.NumberToIP(System.Int32)">
            <summary>
            将int型表示的IP还原成正常IPv4格式。
            </summary>
            <param name="intIPAddress">int型表示的IP</param>
            <returns></returns>
        </member>
        <member name="M:One.Core.Helper.MessageHelper.Notify(System.String)">
            <summary>
            使用方法 Mes.NotifyMessage += SetNotifyMessage;  SetNotifyMessage(string message, SolidColorBrush fc)
            </summary>
            <param name="message"></param>
            <param name="color"></param>
        </member>
        <member name="T:One.Core.Helper.NetHelper">
            <summary> 网络帮助类 </summary>
        </member>
        <member name="M:One.Core.Helper.NetHelper.GetIPv4AdList">
            <summary> 获取本机所有IPv4地址 </summary>
        </member>
        <member name="M:One.Core.Helper.NetHelper.GetIPv6AdList">
            <summary> 获取本机所有IPv6地址 </summary>
        </member>
        <member name="M:One.Core.Helper.NetHelper.GetLocalIP">
            <summary> 获取当前使用的IP,Ping baidu </summary>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.NetHelper.GetPrimaryDNS">
            <summary> 获取本机主DNS </summary>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.NetHelper.PortInUse(System.Int32)">
            <summary> 检测端口是否占用 </summary>
            <param name="port"> </param>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.NetHelper.GetLocalNetInfo">
            <summary> 获取本机网络信息 </summary>
        </member>
        <member name="M:One.Core.Helper.NetHelper.Ping(System.String)">
            <summary> 检测网络是否连通 </summary>
        </member>
        <member name="P:One.Core.Helper.NetWorkInfo.IP">
            <summary> IP地址 </summary>
        </member>
        <member name="P:One.Core.Helper.NetWorkInfo.IPv4Mask">
            <summary> 子网掩码 </summary>
        </member>
        <member name="P:One.Core.Helper.NetWorkInfo.GatewayAddresses">
            <summary> 网关 </summary>
        </member>
        <member name="P:One.Core.Helper.NetWorkInfo.DnsAddresses">
            <summary> DNS </summary>
        </member>
        <member name="P:One.Core.Helper.NetWorkInfo.BroadcastPoint">
            <summary> 广播地址 </summary>
        </member>
        <member name="T:One.Core.Helper.PathHelper">
            <summary>
            路径寻找帮助类
            </summary>
        </member>
        <member name="M:One.Core.Helper.PathHelper.GetParentDirectory(System.String,System.Int32)">
            <summary> 获取父目录 </summary>
            <param name="path"> 当前目录 </param>
            <param name="i">    第几级父目录 </param>
            <returns> </returns>
        </member>
        <member name="T:One.Core.Helper.ProcessHelper">
            <summary>
            进程帮助类
            </summary>
        </member>
        <member name="M:One.Core.Helper.ProcessHelper.TestProc(System.String)">
            <summary>
            启动、结束进程测试程序
            </summary>
            <param name="procName">进程名称</param>
        </member>
        <member name="M:One.Core.Helper.ProcessHelper.RunApp(System.String,System.String,System.Boolean)">
            <summary> 运行一个控制台程序并返回其输出参数。 </summary>
            <param name="filename">  方法名 </param>
            <param name="arguments"> </param>
            <param name="recordLog"> 是否记录日志</param>
            <returns> </returns>
        </member>
        <member name="T:One.Core.Helper.ReflectionHelper">
            <summary> 反射帮助类 </summary>
        </member>
        <member name="M:One.Core.Helper.ReflectionHelper.ForeachClassProperties``1(``0)">
            <summary> 遍历类属性 </summary>
            <typeparam name="T">  </typeparam>
            <param name="model">  </param>
        </member>
        <member name="M:One.Core.Helper.ReflectionHelper.ForeachClassFields``1(``0)">
            <summary> 遍历类字段 </summary>
            <typeparam name="T">  </typeparam>
            <param name="model">  </param>
        </member>
        <member name="M:One.Core.Helper.ReflectionHelper.GetParentMethodName">
            <summary> 获取父方法名 </summary>
            <returns>  </returns>
        </member>
        <member name="T:One.Core.Helper.ServiceHelper">
            <summary>
            Windows服务帮助类
            </summary>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.IsServiceExisted(System.String)">
            <summary> C#判断服务是否存在 </summary>
            <param name="serviceName">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.ServiceStop(System.String)">
            <summary> C#停止服务 </summary>
            <param name="serviceName">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.ServiceStat(System.String)">
            <summary> C#检测服务状态 </summary>
            <param name="serviceName">  </param>
            <returns>  </returns>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.InstallService(System.String)">
            <summary> C#安装服务 </summary>
            <param name="serviceFilePath">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.ServiceStart(System.String)">
            <summary> C#启动服务 </summary>
            <param name="serviceName">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.UnstallService(System.String)">
            <summary> C#卸载服务 </summary>
            <param name="serviceFilePath">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.NetStopService(System.String)">
            <summary> 调用系统cmd关闭服务 </summary>
            <param name="Name">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.ScDellService(System.String)">
            <summary> 调用系统cmd删除服务 </summary>
            <param name="Name">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.CmdInstallService(System.String,System.String)">
            <summary> 调用系统cmd安装服务 </summary>
            <param name="AppName">  </param>
            <param name="IniFile">  </param>
        </member>
        <member name="M:One.Core.Helper.ServiceHelper.CmdStartService(System.String)">
            <summary> 调用系统cmd启动服务 </summary>
            <param name="AppName">  </param>
            <param name="IniFile">  </param>
        </member>
        <member name="T:One.Core.Helper.Computer.WindowsAPIType">
            <summary> windows api 类型 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.Win32_PhysicalMemory">
            <summary> 内存 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.Win32_Processor">
            <summary> cpu </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.win32_DiskDrive">
            <summary> 硬盘 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.Win32_ComputerSystemProduct">
            <summary> 电脑型号 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.Win32_VideoController">
            <summary> 显卡,分辨率 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIType.Win32_OperatingSystem">
            <summary> 操作系统 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.Name">
            <summary> 名称 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.VideoProcessor">
            <summary> 显卡芯片 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.AdapterRAM">
            <summary> 显存大小 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.CurrentHorizontalResolution">
            <summary> 分辨率宽 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.CurrentVerticalResolution">
            <summary> 分辨率高 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.Version">
            <summary> 电脑型号 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.Size">
            <summary> 硬盘容量 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.Capacity">
            <summary> 内存容量 </summary>
        </member>
        <member name="F:One.Core.Helper.Computer.WindowsAPIKeys.NumberOfCores">
            <summary> cpu核心数 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.GetCPU">
            <summary> 查找cpu的名称，主频, 核心数 </summary>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.Computer.GetCPU_Count">
            <summary> 获取cpu核心数 </summary>
            <returns> </returns>
        </member>
        <member name="M:One.Core.Helper.Computer.GetPhisicalMemory">
            <summary> 获取系统内存大小 </summary>
            <returns> 内存大小（单位M） </returns>
        </member>
        <member name="M:One.Core.Helper.Computer.GetDiskSize">
            <summary> 获取硬盘容量 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.GetVersion">
            <summary> 电脑型号 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.GetFenbianlv">
            <summary> 获取分辨率 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.GetVideoController">
            <summary> 显卡 芯片,显存大小 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.GetOS_Version">
            <summary> 操作系统版本 </summary>
        </member>
        <member name="M:One.Core.Helper.Computer.ToGB(System.Double,System.Double)">
            <summary> 将字节转换为GB </summary>
            <param name="size"> 字节值 </param>
            <param name="mod">  除数，硬盘除以1000，内存除以1024 </param>
            <returns> </returns>
        </member>
    </members>
</doc>
